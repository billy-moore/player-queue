{"version":3,"sources":["store/PlayerContext.js","layout/Header/Header.js","layout/Body/ActivePlayer.js","layout/Body/PlayerList.js","layout/BottomNav/BottomBar.js","layout/HOCs/RightDrawer.js","imgs/Joycons.png","imgs/Gamecube.png","imgs/SwitchPro.png","imgs/Snes.png","layout/HOCs/NewModal.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerContext","createContext","PlayerProvider","props","useState","current","inLine","locked","total","players","setPlayers","Provider","value","children","useStyles","makeStyles","theme","root","display","title","flexGrow","Header","useContext","classes","AppBar","position","Toolbar","Typography","variant","noWrap","className","undefined","length","IconButton","color","edge","onClick","openToggle","clsx","isOpen","hide","nameSpace","fontFamily","fontSize","padding","boxSizing","background","image","height","minHeight","logo","tier0","backgroundColor","tier1","tier2","tier3","tier4","tier5","tier6","tier7","ActivePlayer","lockNameHandler","e","index","name","isLocked","playerIndex","findIndex","player","splice","prevPlayer","prevPlayers","tierList","Grid","item","xs","Paper","container","direction","justifyContent","alignItems","id","src","icon","alt","button","Button","size","nextLine","shift","deletePlayerHandler","PlayerList","spacing","style","margin","overflow","modalOpen","alignContent","map","width","bottom","SimpleBottomNavigation","disabled","label","startIcon","newName","openSpaces","nextInLine","concat","list","listItem","buttonGroup","RightDrawer","useEffect","giveItUp","pop","unshift","getInThere","push","console","log","open","onClose","anchor","ListItem","ListItemIcon","ListItemText","deleteLineHandler","Divider","textAlign","ButtonGroup","rand","Math","round","random","getModalStyle","top","left","transform","paper","palette","border","boxShadow","shadows","NewModal","newPlayer","setNewPlayer","error","setError","icons","Joycons","Gamecube","SwitchPro","Snes","randomIcon","floor","modalStyle","addNewPlayerToQueue","preventDefault","Modal","onSubmit","TextField","fullWidth","onChange","oldName","target","toUpperCase","Fab","App","drawerOpen","setDrawerOpen","setModalOpen","handleDrawerOpen","handleModalOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f20abaf.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const PlayerContext = createContext();\n\nexport const PlayerProvider = (props) => {\n  const [ players, setPlayers ] = useState({\n    current: [],\n    inLine: [],\n    locked: [],\n    total: 6,\n  })\n\n  return (\n    <PlayerContext.Provider value={[players, setPlayers]}>\n      {props.children}\n    </PlayerContext.Provider>\n  );\n};\n\n//{name: 'Steven', locked: false}, {name: 'Dave', locked: false}","import React, { useContext } from \"react\";\nimport clsx from 'clsx'\nimport { PlayerContext } from \"../../store/PlayerContext\";\n\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  // appBar: {\n  //   transition: theme.transitions.create(['margin', 'width'], {\n  //     easing: theme.transitions.easing.sharp,\n  //     duration: theme.transitions.duration.leavingScreen,\n  //   }),\n  // },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = ( props ) => {\n  const [players] = useContext(PlayerContext);\n\n  const classes = useStyles();\n\n  \n\n  return (\n    <AppBar\n        position=\"fixed\"\n        // className={clsx(classes.appBar, {\n        //   [classes.appBarShift]: props.isOpen,\n        // })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Playing: {players.current.length !== undefined ? players.current.length : 0}\n          </Typography>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            In Line: {players.inLine.length !== undefined ? players.inLine.length : 0}\n          </Typography>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Locked: {players.locked.length !== undefined ? players.locked.length : 0}\n          </Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={props.openToggle}\n            className={clsx(props.isOpen && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport {Button, Grid, Paper} from '@material-ui/core'\nimport { PlayerContext } from \"../../store/PlayerContext\";\nimport LockIcon from '@material-ui/icons/Lock';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n  nameSpace: {\n    fontFamily: 'Bangers, cursive',\n    fontSize: '5rem',\n    padding: '.8rem',\n    boxSizing: 'border-box',\n    background: '#37474f',\n    color: '#ffffff',\n  },\n  image: {\n    height: '8rem',\n    minHeight: '3rem',\n  },\n  logo:{\n\n  },\n  //red\n  tier0: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(194,24,91)',\n    background: 'linear-gradient(90deg, rgba(194,24,91,1) 0%, rgba(216,27,96,1) 35%, rgba(240,98,146,1) 100%)',\n  },\n  //Orange\n  tier1: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(255,143,0)',\n    background: 'linear-gradient(90deg, rgba(255,143,0,1) 0%, rgba(255,160,0,1) 35%, rgba(255,193,7,1) 100%)',\n  },\n  //Yellow\n  tier2: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(253,216,53)',\n    background: 'linear-gradient(90deg, rgba(253,216,53,1) 0%, rgba(255,238,88,1) 35%, rgba(255,249,196,1) 100%)',\n  },\n  //Green\n  tier3: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(76,175,80)',\n    background: 'linear-gradient(90deg, rgba(76,175,80,1) 0%, rgba(102,187,106,1) 35%, rgba(129,199,132,1) 100%)',\n  },\n  //blue\n  tier4: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(3,155,229)',\n    background: 'linear-gradient(90deg, rgba(3,155,229,1) 0%, rgba(41,182,246,1) 35%, rgba(79,195,247,1) 100%)',\n  },\n  //darkBlue\n  tier5: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(48,63,159)',\n    background: 'linear-gradient(90deg, rgba(48,63,159,1) 0%, rgba(63,81,181,1) 35%, rgba(92,107,192,1) 100%)',\n  },\n  //Purple\n  tier6: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(81,45,168)',\n    background: 'linear-gradient(90deg, rgba(81,45,168,1) 0%, rgba(103,58,183,1) 35%, rgba(126,87,194,1) 100%)',\n  },\n  //black\n  tier7: {\n    padding: '.5rem',\n    backgroundColor: 'rgb(66,66,66)',\n    background: 'linear-gradient(90deg, rgba(66,66,66,1) 0%, rgba(117,117,117,1) 35%, rgba(158,158,158,1) 100%)',\n  }\n});\n\nconst ActivePlayer = (props) => {\n  const classes = useStyles()\n  const [players, setPlayers] = useContext( PlayerContext )\n\n  const deletePlayerHandler = (e, index, name) => {\n    players.current.splice(index, 1)\n\n    setPlayers(prevPlayer => ({\n      ...prevPlayer\n    }))\n\n    if( players.inLine.length > 0){\n      const nextLine = players.inLine.shift()\n      setPlayers(prevPlayer => ({\n        ...prevPlayer,\n        current: [...prevPlayer.current, nextLine]\n      }))\n    }\n  }\n\nconst lockNameHandler = (e, index, name, isLocked) => {\n  \n  if (!isLocked){\n    players.current[index].locked = true\n\n    setPlayers(prevPlayers => ({\n      ...prevPlayers,\n      locked: [...prevPlayers.locked, prevPlayers.current[index]]\n    }))\n\n  } else {\n    players.current[index].locked = false\n\n    const playerIndex = players.locked.findIndex(player => player === name)\n    players.locked.splice(playerIndex, 1)\n\n    setPlayers(prevPlayer => ({\n      ...prevPlayer\n    }))\n}}\n\n  const tierList = [classes.tier0, classes.tier1, classes.tier2, classes.tier3, classes.tier4, classes.tier5, classes.tier6, classes.tier7]\n  \n  return (\n    <Grid item xs={12} >\n        <Paper>\n          <Grid container direction='row' justifyContent='center' alignItems='center' className={tierList[props.id]} >\n            <Grid item xs={4} className={classes.logo} onClick={(e) => lockNameHandler(e, props.id, props.name, props.isLocked)}>\n              <img src={props.icon} alt=\"player logo\" className={classes.image} />\n            </Grid>\n            <Grid item xs={6} onClick={(e) => lockNameHandler(e, props.id, props.name, props.isLocked)} >\n              <Paper className={classes.nameSpace}>\n                {props.name}\n              </Paper>\n            </Grid>\n            {props.isLocked ? <Grid item xs={2} className={classes.button} onClick={(e) => lockNameHandler(e, props.id, props.name, props.isLocked)}>\n              <Button variant='contained' size='small' onClick={(e) => lockNameHandler(e, props.id, props.name, props.isLocked)}>{<LockIcon />}Unlock</Button>\n              </Grid>\n              : <Grid item xs={2} className={classes.button} >\n                  <Button variant='contained' color='secondary' size='small' onClick={(e) => deletePlayerHandler(e, props.id, props.name)}><HighlightOffIcon />Delete</Button>\n                </Grid>\n          }\n          </Grid>\n        </Paper>\n    </Grid>\n  )\n}\n\nexport default ActivePlayer;\n","import { Toolbar, Grid } from \"@material-ui/core\";\nimport React, {Fragment, useContext } from \"react\";\nimport { PlayerContext } from \"../../store/PlayerContext\";\nimport ActivePlayer from \"./ActivePlayer\";\n\n\nconst PlayerList = ( props ) => {\n  const [players] = useContext( PlayerContext );\n  \n  \n  return (\n    <Fragment>\n      <Toolbar />\n      <Grid container spacing={1} style={{\n        margin: '.2rem',\n        overflow: 'scroll',\n      // width: '80%',\n      // justifySelf: 'center'\n      }}>\n        {players.current.length === 0 && !props.modalOpen && <Grid item container justifyContent='center' alignContent='center'><h2>Let's get this party started!</h2></Grid>}\n        {players.current === undefined ? <h2>No Players, Yet</h2> : players.current.map((player, index) => (\n          <ActivePlayer name={player.name} isLocked={player.locked} key={index} id={index} icon={player.icon} />\n        ))}\n      </Grid>\n    </Fragment>\n    \n  );\n};\n\nexport default PlayerList;\n","import React, {useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PlayerContext } from '../../store/PlayerContext';\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport { Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        padding: '10px'\n    },\n});\n\nexport default function SimpleBottomNavigation( props ) {\n    const classes = useStyles();\n    const [players, setPlayers] = useContext( PlayerContext )\n    \n    const resetListHandler = () => {\n        setPlayers(prevPlayer => ({\n            ...prevPlayer,\n            current: [],\n            inLine: [],\n            locked: [],\n        }))\n    }\n\n    const newGameHandler = () => {\n        const openSpaces = players.total - players.locked.length\n        const nextInLine = players.inLine.splice(0, openSpaces)\n        \n        setPlayers(prevPlayer => ({\n            ...prevPlayer,\n            current: prevPlayer.locked.concat(nextInLine)\n        }))\n    }\n\n    return (\n        // <BottomNavigation\n        //     style={{paddingTop: '10px'}}\n        //     value={value}\n        //     onChange={(event, newValue) => {\n        //         setValue(newValue);\n        //     }}\n        //     className={classes.root}\n        //     showlabel\n        // >\n        <Grid container spacing={1} justifyContent='center' className={classes.root}>\n            <Grid item>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    size='large'\n                    disabled={players.current.length === 0}\n                    label=\"Reset List\" \n                    startIcon={<RestoreIcon />} \n                    onClick={resetListHandler}\n                    \n                    >Reset List</Button>\n            </Grid>\n            <Grid item>\n                {!props.modalOpen && \n\n                    <Button \n                        variant='contained'\n                        color='secondary'\n                        size='large' \n                        label=\"Add Player\" \n                        startIcon={<AddCircleOutlineIcon />}\n                        onClick={ props.newName }\n                        >\n                            Add Player\n                    </Button>\n            }\n            </Grid>\n            <Grid item>\n                    <Button \n                        variant='contained'\n                        color='primary'\n                        size='large'\n                        disabled={players.inLine.length < 1}\n                        label=\"New Game\" \n                        startIcon={<VideogameAssetIcon />}\n                        onClick={newGameHandler}\n                        >\n                            New Game\n                    </Button>\n            </Grid>\n        </Grid>\n        //</BottomNavigation>\n    );\n}","import React, { useContext, useEffect } from 'react'\n\nimport { PlayerContext } from '../../store/PlayerContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ButtonGroup, Button, Divider, Drawer as MUIDrawer, ListItem, Paper, ListItemIcon, ListItemText, IconButton, Typography} from '@material-ui/core'\n\nimport GamepadIcon from '@material-ui/icons/Gamepad';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n    const useStyles = makeStyles({\n        list: {\n            width: 0,\n            margin: '.3rem',\n            //backgroundColor: '#616161',\n            //color: '#ffffff'\n        },\n        listItem: {\n            justifyContent: 'start',\n\n        },\n        buttonGroup: {\n            display: 'flex',\n            flexGrow: 1\n        }\n    });\n\nconst RightDrawer = (props) => {\n    const [players, setPlayers] = useContext(PlayerContext)\n    const classes = useStyles();\n    //const [controllers, setControllers] = useState(players.total)\n\n    const deleteLineHandler = (e, index) => {\n        players.inLine.splice(index, 1)\n        setPlayers(prevPlayer => ({\n            ...prevPlayer,\n            inLine: [...prevPlayer.inLine]\n        }))\n    }\n\n    const removeControllerHandler = () => {\n        setPlayers(prevPlayer => ({\n            ...prevPlayer,\n            total: (players.total - 1)\n        }))\n    }\n\n    useEffect(() => {\n        if( players.current.length > players.total ){\n            const giveItUp = players.current.pop()\n            players.inLine.unshift(giveItUp)\n            \n            setPlayers(prevPlayer => ({\n                ...prevPlayer\n            }))\n        }\n    }, [players, setPlayers])\n\n    const addControllerHandler = () => {\n        setPlayers(prevPlayer => ({\n            ...prevPlayer,\n            total: (players.total + 1)\n        }))\n    }\n\n    useEffect(() => {\n        if(players.total > players.current.length && players.inLine.length >= 1){\n            const getInThere = players.inLine.shift()\n        \n            players.current.push(getInThere)\n            console.log(players.current)\n            setPlayers(prevPlayer => ({\n                ...prevPlayer\n            }))\n        }\n    }, [players, setPlayers])\n\n\n    return (\n        <MUIDrawer\n            open = { props.isOpen }\n            className={classes.list}\n            onClose = { props.openToggle }\n            anchor='right'\n        >\n            {players.inLine.map((player, index) => (\n        \n                <Paper key={index} className={classes.list} style={{background: '#616161', width: '300px',}}>\n                    \n                    <ListItem >\n                        <ListItemIcon>\n                            <GamepadIcon />\n                        </ListItemIcon>\n                        <ListItemText style={{fontSize: '.7rem'}}>\n                            <h3>{player.name}</h3>\n                        </ListItemText>\n                        <IconButton style={{backgroundColor: '#212121'}} onClick={(e) => deleteLineHandler(e, index)}>\n                            <DeleteIcon style={{color: '#ffffff'}}/>\n                        </IconButton>\n                    </ListItem>\n\n                </Paper>\n            ))}\n            <Divider />\n            <Divider />\n            {/* <Grid container direction='row' style={{paddingTop: '10px', width: '100%'}}> */}\n                {/* <Grid item xs={12} > */}\n                    <Typography variant='h5' style={{textAlign: 'center'}}>\n                        # of Controllers\n                    </Typography>\n                    <Typography variant='h5' style={{textAlign: 'center'}}>\n                        {players.total}\n                    </Typography>\n                    <ListItem style={{justifyContent: 'center', width: '300px'}}>\n                        <ButtonGroup variant='contained' color='primary'>\n                            <Button\n                                disabled={players.total === 2}\n                                onClick={removeControllerHandler}\n                            >Remove</Button>\n                            <Button\n                                disabled={players.total === 8}\n                                onClick={addControllerHandler}\n                            >Add</Button>\n                        </ButtonGroup>\n                    </ListItem>\n                    {players.total === 2 && <ListItem style={{justifyContent: 'center'}}>\n                        <Typography variant='h6' style={{color: 'red'}}>\n                            Can't remove any <br></br> more controllers\n                        </Typography>\n                    </ListItem>}\n                    {players.total === 8 && <ListItem style={{justifyContent: 'center'}}>\n                        <Typography variant='h6' style={{color: 'red'}}>\n                            Can't add any <br></br> more controllers\n                        </Typography>\n                    </ListItem>}\n\n            \n        </MUIDrawer>\n    )\n}\n\nexport default RightDrawer\n","export default __webpack_public_path__ + \"static/media/Joycons.d81e4bf4.png\";","export default __webpack_public_path__ + \"static/media/Gamecube.59223ce8.png\";","export default __webpack_public_path__ + \"static/media/SwitchPro.175407f4.png\";","export default __webpack_public_path__ + \"static/media/Snes.fdcb5c0e.png\";","import React, { useContext, useState } from 'react'\nimport { Fab, Grid, Modal, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport { PlayerContext } from '../../store/PlayerContext';\nimport Joycons from '../../imgs/Joycons.png'\nimport Gamecube from '../../imgs/Gamecube.png'\nimport SwitchPro from '../../imgs/SwitchPro.png'\nimport Snes from '../../imgs/Snes.png'\n//import { useSpring, animated } from 'react-spring/web.cjs';\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n    }\n    \n    function getModalStyle() {\n        const top = 50 + rand();\n        const left = 50 + rand();\n    \n        return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n        },\n    }));\n\nconst NewModal = ( props ) => {\n    const [players, setPlayers] = useContext( PlayerContext )\n    const [newPlayer, setNewPlayer ] = useState({'name': '', 'locked': false})\n    const [error, setError] = useState(false)\n\n    const icons = [Joycons, Gamecube, SwitchPro, Snes]\n    const randomIcon = icons[Math.floor(Math.random() * icons.length)]\n\n    const classes = useStyles()\n    const [modalStyle] = useState(getModalStyle);\n\n    const addNewPlayerToQueue = (e) => {\n        e.preventDefault()\n        if ( newPlayer === ''){\n            setError(true)\n        } else if (players.current.length < players.total){\n            setPlayers(prevPlayers => ({\n                ...prevPlayers,\n                current: [...prevPlayers.current, newPlayer],\n            }))\n        setError(false)\n            } else {\n            setPlayers(prevPlayers => ({\n                ...prevPlayers,\n                inLine: [...prevPlayers.inLine, newPlayer],\n            }))\n        setError(false)\n        }\n        //console.log(players.current)\n    setNewPlayer(prevPlayer => ({...prevPlayer, 'name': ''}))\n    \n    }\n\n\n    return (\n        <Modal\n        open={ props.isOpen }\n        onClose={ props.openToggle }\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        > \n            <form style={modalStyle} className={classes.paper} onSubmit={ addNewPlayerToQueue }>\n                <Grid container spacing={2} justifyContent='center'>\n                    <Grid item xs={9}>\n                        <TextField \n                            id=\"outlined-basic\" \n                            label=\"New Player\" \n                            variant=\"outlined\" \n                            fullWidth\n                            value={newPlayer.name}\n                            onChange={(e) => setNewPlayer(oldName => ({...oldName, 'name': e.target.value.toUpperCase(), 'icon': randomIcon}))}\n                            error={error}\n                            />\n                    </Grid>\n                    <Grid item >\n                        <Fab color=\"secondary\" onClick={ addNewPlayerToQueue }>\n                            <AddIcon />\n                        </Fab>\n                    </Grid>\n                </Grid>\n            </form>\n        </Modal>\n    )\n}\n\nexport default NewModal\n","import React, { useState } from 'react'\nimport { PlayerProvider } from \"./store/PlayerContext\";\nimport Header from \"./layout/Header/Header\";\nimport PlayerList from \"./layout/Body/PlayerList\";\nimport BottomBar from './layout/BottomNav/BottomBar'\nimport RightDrawer from './layout/HOCs/RightDrawer'\nimport NewModal from './layout/HOCs/NewModal';\n\nimport \"./App.css\";\n\n\nfunction App() {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false)\n  \n  const handleDrawerOpen = () => {\n    setDrawerOpen(!drawerOpen)\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(!modalOpen)\n  }\n\n  return (\n    <PlayerProvider>\n      <div className=\"App\">\n        <RightDrawer isOpen = { drawerOpen } openToggle={ handleDrawerOpen }/>\n        <NewModal isOpen = {modalOpen} openToggle={ handleModalOpen }/>\n        <Header openToggle={ handleDrawerOpen } isOpen={ drawerOpen } />\n        <PlayerList modalOpen={modalOpen}/>\n        <BottomBar newName={handleModalOpen} modalOpen={ modalOpen }/>\n      </div>\n    </PlayerProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}